<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
                xmlns:flex="flare.flex.*"
                width="450" height="500" 
                creationComplete="init()" alpha="0.7">
  <mx:Script>
    <![CDATA[
      import com.aims.School;
 
      import mx.collections.ArrayCollection;
      import flash.geom.Rectangle;
      
      private var _containerheight:Number;
      private var _containerwidth:Number;
      [Bindable] public var school:School;
      private var _bounds:Rectangle;
      
      [Bindable] public var expenses:ArrayCollection = new ArrayCollection([
        {Month:"Jan", Profit:2000, Expenses:1500},
        {Month:"Feb", Profit:1000, Expenses:200},
        {Month:"Mar", Profit:1500, Expenses:500}
      ]);
      
      [Bindable]
      public var SMITH:Array = [
        {Month:"Jan", Profit:2000},
        {Month:"Feb", Profit:1000},
        {Month:"Mar", Profit:1500}
      ];
      [Bindable]
      public var DECKER:Array = [
        {Month:"Jan", Profit:1000},
        {Month:"Feb", Profit:1000},
        {Month:"Mar", Profit:100}
      ];


      
      
      private function init():void
      {
        this.titleBar.addEventListener(MouseEvent.MOUSE_DOWN, moveWindow);
        this.titleBar.addEventListener(MouseEvent.MOUSE_UP, stopWindow); 
        
        _bounds = new Rectangle(0, 0, 150, 70);
        
          
      }
      
      public function schoolSelected(tmpSchool:School):void {
        
        school = tmpSchool;
        
 
        
      }
  
      
      public function set containerWidth(width:Number):void
      {
        _containerwidth = width;
      }
      public function set containerHeight(height:Number):void
      {
        _containerheight = height;
      }
      
      private function moveWindow( evt:MouseEvent ):void
      {
        var limitdrag:Rectangle = new Rectangle(0, 0, _containerwidth-this.width, _containerheight-this.height);
        this.startDrag(false, limitdrag);
      }	
      private function stopWindow( evt:MouseEvent ):void
      {
        this.stopDrag();
      }
      
      private function getSchoolName():String {
        var result:String;
        if ( this.school == null ) {
          result = "Please select a school";
        } else {
          result = this.school.school_name;
        }
        return result;
      }
      
      private function hideSchoolDetails(event:Event):void {
        var schoolName:String = this.school["school_name"];
        trace("hiding school details for " + schoolName);
        var e:HideSchoolDetailsEvent = new HideSchoolDetailsEvent("hideSchoolDetailsEvent", this.school);
        dispatchEvent(e);
      }
      
      
    ]]>
  </mx:Script>
  <mx:Metadata>
    [Event(name="hideSchoolDetailsEvent", type="com.aims.HideSchoolDetailsEvent")]
  </mx:Metadata>
  
  <mx:Stroke id="s1" color="blue" weight="2"/>
  <mx:Stroke id="s2" color="red" weight="2"/>

  
  <mx:VBox id="detailBox" horizontalAlign="left" width="100%" height="100%" verticalAlign="top">
    <mx:Label id="school_name" text="{school.school_name}" fontSize="16"/>
    <mx:Button id="hideSchoolDetailsButton" label="Hide Details" click="hideSchoolDetails(event)"
               enabled="true"/>
    <mx:ColumnChart id="myChart" dataProvider="{SMITH}"
                     showDataTips="true" height="300">
      <mx:verticalAxis>
        <mx:CategoryAxis 
          categoryField="Month"
          />
      </mx:verticalAxis>
      <mx:series>
        <mx:ColumnSeries 
          dataProvider="{SMITH}"
          yField="Month" 
          xField="Profit" 
          displayName="SMITH"
          stroke="{s1}"

          />
        <mx:ColumnSeries 
          dataProvider="{DECKER}"
          yField="Month" 
          xField="Profit" 
          displayName="DECKER"
          stroke="{s2}"

          />
      </mx:series>
    </mx:ColumnChart>
    <mx:Legend dataProvider="{myChart}"/>

  </mx:VBox>	
</mx:TitleWindow>
